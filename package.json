{
  "name": "react-ux-analyzer",
  "displayName": "React UX Analyzer",
  "description": "Analyzes usability issues based on Nielsen‚Äôs 10 heuristics for React (JSX) projects and assesses visual quality with NIMA scoring.",
  "version": "1.0.4",
  "publisher": "CyberSpaceEsli",
  "galleryBanner": {
    "color": "#673AB7",
    "theme": "dark"
  },
  "homepage": "https://github.com/CyberSpaceEsli/react-ux-analyzer",
  "repository": {
    "type": "git",
    "url": "https://github.com/CyberSpaceEsli/react-ux-analyzer.git"
  },
  "bugs": {
    "url": "https://github.com/CyberSpaceEsli/react-ux-analyzer/issues"
  },
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Linters",
    "Education",
    "Other"
  ],
  "keywords": [
    "usability",
    "ux",
    "nielsen",
    "react",
    "jsx",
    "linters",
    "heuristics",
    "accessibility",
    "nima",
    "visual quality"
  ],
  "activationEvents": [
    "onLanguage:javascriptreact",
    "workspaceContains:**/*.jsx"
  ],
  "icon": "./images/react-ux-analyzer-logo.png",
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "react-ux-analyzer.setApiKey",
        "title": "üîë Set OpenRouter API Key"
      },
      {
        "command": "react-ux-analyzer.clearApiKey",
        "title": "üóëÔ∏è Clear OpenRouter API Key"
      },
      {
        "command": "react-ux-analyzer.setTargetUrl",
        "title": "üåê Set Local Dev URL",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.usabilityAnalyzeReactFiles",
        "title": "Analyze UX Heuristics on JSX Files (Not #2 & #8)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeBreadcrumbs",
        "title": "Analyze Breadcrumbs (Nielsen #1: Visibility & System Status)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeLoading",
        "title": "Analyze Loading States (Nielsen #1: Visibility & System Status)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeMatchSystem",
        "title": "Analyze Match System with Real World (Nielsen #2: Match Between System & Real World)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeControlExits",
        "title": "Analyze Control Exits (Nielsen #3: User Control & Freedom)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzePageConsistency",
        "title": "Analyze Page Consistency (Nielsen #4: Consistency & Standards)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeErrorPrevention",
        "title": "Analyze Error Prevention (Nielsen #5: Error Prevention)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeRecognition",
        "title": "Analyze Recognition Cues (Nielsen #6: Recognition Rather Than Recall)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeShortcuts",
        "title": "Analyze Shortcuts (Nielsen #7: Flexibility & Efficiency of Use)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeMinimalism",
        "title": "Analyze Aesthetic & Minimalist Design (Nielsen #8: Aesthetic & Minimalist Design)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeHelpError",
        "title": "Analyze Help for Error Recognition (Nielsen #9: Help Users Recognize, Diagnose, and Recover from Errors)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeHelp",
        "title": "Analyze Help and Documentation (Nielsen #10: Help & Documentation)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeVisualQuality",
        "title": "Analyze Visual Quality (NIMA)",
        "category": "React UX Analyzer"
      },
      {
        "command": "react-ux-analyzer.analyzeCustomRules",
        "title": "Analyze Custom UX Rules",
        "category": "React UX Analyzer"
      }
    ],
     "configuration": {
      "type": "object",
      "title": "React UX Analyzer",
      "properties": {
        "react-ux-analyzer.targetUrl": {
          "type": "string",
          "default": "http://localhost:5173",
          "description": "Target URL for visual quality analysis"
        },
        "react-ux-analyzer.customRulePath": {
          "type": "string",
          "default": "public/custom-ux-rules",
          "description": "Path to custom UX rules directory (relative to workspace root)"
        }
      }
    },
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname == .jsx || resourceExtname == .tsx || resourceExtname == .js || resourceExtname == .ts",
          "command": "react-ux-analyzer.analyzeBreadcrumbs",
          "group": "navigation"
        },
        {
          "when": "resourceExtname == .jsx || resourceExtname == .tsx || resourceExtname == .js || resourceExtname == .ts",
          "command": "react-ux-analyzer.analyzeLoading",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "when": "resourceExtname == .jsx || resourceExtname == .tsx || resourceExtname == .js || resourceExtname == .ts",
          "command": "react-ux-analyzer.analyzeBreadcrumbs",
          "group": "navigation"
        },
        {
          "when": "resourceExtname == .jsx || resourceExtname == .tsx || resourceExtname == .js || resourceExtname == .ts",
          "command": "react-ux-analyzer.analyzeLoading",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test",
    "build": "webpack"
  },
  "dependencies": {
    "@babel/parser": "^7.28.4",
    "@babel/traverse": "^7.28.4",
    "dotenv": "^17.2.2",
    "image-js": "^1.0.0",
    "node-fetch": "^3.3.2",
    "puppeteer": "^24.22.0",
    "react": "^18.0.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/react": "^18.0.0",
    "@types/vscode": "^1.102.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "copy-webpack-plugin": "^13.0.1",
    "eslint": "^9.25.1",
    "typescript": "^5.9.3",
    "webpack": "^5.102.0",
    "webpack-cli": "^6.0.1"
  }
}
